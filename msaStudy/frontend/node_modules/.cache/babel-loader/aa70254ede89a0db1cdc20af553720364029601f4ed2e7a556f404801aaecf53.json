{"ast":null,"code":"var _jsxFileName = \"C:\\\\eGovFrame-4.2.0\\\\msaStudy\\\\SecondProject\\\\frontend\\\\src\\\\component\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport \"../styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [userID, setUserID] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const postData = async () => {\n    try {\n      const response = await axios.post('http://localhost:1001/userService/Login', {\n        userID: userID,\n        password: password\n      });\n      const success = response.status; // 서버에서 반환한 토큰\n      const token = response.data; // 성공 여부\n      console.log('생성된 Token:', token);\n      if (success) {\n        localStorage.setItem('jwtToken', token); // 토큰을 로컬 스토리지에 저장\n        navigate('/Test'); // 로그인 성공 시 성공 페이지로 이동\n      } else {\n        console.error('요청 실패: ', response.data); // 실패 시 콘솔에 로그\n      }\n    } catch (error) {\n      console.error('데이터 전송 실패: ', error); // 에러 발생 시 콘솔에 로그\n    }\n  };\n  const joinPage = () => {\n    navigate('./Signup'); // 회원가입 페이지로 이동\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"app\",\n      children: \"IT eyes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"container_form container--signup\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        class: \"form\",\n        id: \"form1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"form__title\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"User\",\n          class: \"input\",\n          onChange: e => setUserID(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: postData,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinPage,\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"XZPPkMabB8/8/y8TBc50Ock0cKg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Login","_s","userID","setUserID","password","setPassword","navigate","postData","response","post","success","status","token","data","console","log","localStorage","setItem","error","joinPage","children","class","fileName","_jsxFileName","lineNumber","columnNumber","action","id","type","placeholder","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/eGovFrame-4.2.0/msaStudy/SecondProject/frontend/src/component/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport \"../styles/App.css\";\r\n\r\nfunction Login() {\r\n  const [userID, setUserID] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const postData = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:1001/userService/Login', {\r\n        userID: userID,\r\n        password: password,\r\n      });\r\n\r\n      const success = response.status; // 서버에서 반환한 토큰\r\n      const token = response.data; // 성공 여부\r\n      console.log('생성된 Token:', token);\r\n\r\n      if (success) {\r\n        localStorage.setItem('jwtToken', token); // 토큰을 로컬 스토리지에 저장\r\n        navigate('/Test'); // 로그인 성공 시 성공 페이지로 이동\r\n      } else {\r\n        console.error('요청 실패: ', response.data); // 실패 시 콘솔에 로그\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('데이터 전송 실패: ', error); // 에러 발생 시 콘솔에 로그\r\n    }\r\n  };\r\n\r\n  const joinPage = () => {\r\n    navigate('./Signup'); // 회원가입 페이지로 이동\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 class=\"app\">IT eyes</h1>\r\n      <section class=\"container_form container--signup\">\r\n        <form action=\"#\" class = \"form\" id = \"form1\">\r\n          <h2 class=\"form__title\">Sign In</h2>\r\n          <input\r\n            type=\"text\" placeholder=\"User\" class=\"input\" \r\n            onChange={(e) => setUserID(e.target.value)}\r\n          />\r\n          <br/>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <br/>\r\n          <button onClick={postData}>로그인</button>\r\n        </form>\r\n        <button onClick={joinPage}>회원가입</button>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}