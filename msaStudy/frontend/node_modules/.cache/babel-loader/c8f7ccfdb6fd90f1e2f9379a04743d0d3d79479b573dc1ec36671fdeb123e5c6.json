{"ast":null,"code":"var _jsxFileName = \"C:\\\\eGovFrame-4.2.0\\\\msaStudy\\\\SecondProject\\\\frontend\\\\src\\\\component\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const [responseMessage, setResponseMessage] = useState('');\n\n  // 컴포넌트가 렌더링될 때 데이터를 가져옵니다.\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // axios를 사용하여 GET 요청 보내기\n        const response = await axios.get('http://localhost:1001/userService/servicePage');\n        // 서버 응답 메시지를 상태로 저장\n        setResponseMessage(response.data.message);\n      } catch (error) {\n        console.error('데이터 가져오기 실패: ', error);\n        setResponseMessage('데이터를 불러오는 데 실패했습니다.');\n      }\n    };\n    fetchData();\n  }, []); // 빈 배열은 컴포넌트가 처음 렌더링될 때 한 번만 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC11C\\uBC84\\uB85C\\uBD80\\uD130 \\uBC1B\\uC740 \\uBA54\\uC2DC\\uC9C0:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: responseMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"L68v7SrpzAD7wGHMfDk7OuFzD9w=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Test","_s","responseMessage","setResponseMessage","fetchData","response","get","data","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/eGovFrame-4.2.0/msaStudy/SecondProject/frontend/src/component/Test.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Test() {\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n\r\n  // 컴포넌트가 렌더링될 때 데이터를 가져옵니다.\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // axios를 사용하여 GET 요청 보내기\r\n        const response = await axios.get('http://localhost:1001/userService/servicePage');\r\n        // 서버 응답 메시지를 상태로 저장\r\n        setResponseMessage(response.data.message);\r\n      } catch (error) {\r\n        console.error('데이터 가져오기 실패: ', error);\r\n        setResponseMessage('데이터를 불러오는 데 실패했습니다.');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // 빈 배열은 컴포넌트가 처음 렌더링될 때 한 번만 실행\r\n\r\n  return (\r\n    <div>\r\n      <h2>서버로부터 받은 메시지:</h2>\r\n      <p>{responseMessage}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,+CAA+C,CAAC;QACjF;QACAH,kBAAkB,CAACE,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;MAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;QACrCN,kBAAkB,CAAC,qBAAqB,CAAC;MAC3C;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBhB,OAAA;MAAAY,QAAA,EAAIT;IAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV;AAACd,EAAA,CA1BQD,IAAI;AAAAgB,EAAA,GAAJhB,IAAI;AA4Bb,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}