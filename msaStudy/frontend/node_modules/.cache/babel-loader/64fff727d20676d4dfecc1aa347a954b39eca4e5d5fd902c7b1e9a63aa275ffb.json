{"ast":null,"code":"var _jsxFileName = \"C:\\\\eGovFrame-4.2.0\\\\msaStudy\\\\SecondProject\\\\frontend\\\\src\\\\component\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const [responseMessage, setResponseMessage] = useState('');\n  const navigate = useNavigate();\n\n  // 컴포넌트가 렌더링될 때 데이터를 가져옵니다.\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // axios를 사용하여 GET 요청 보내기\n        const response = await axios.get('http://localhost:1001/userService/servicePage');\n        // 서버 응답 메시지를 상태로 저장\n        setResponseMessage(response.data.message);\n      } catch (error) {\n        console.error('데이터 가져오기 실패: ', error);\n        // 세션 만료 시 401 상태 코드를 확인하고 로그인 페이지로 리다이렉트\n        if (error.response && error.response.status === 401) {\n          // 세션이 만료된 경우 로그인 페이지로 이동\n          navigate('./');\n        } else {\n          setResponseMessage('데이터를 불러오는 데 실패했습니다.');\n        }\n      }\n    };\n    fetchData();\n  }, [navigate]); // useNavigate 의존성 추가\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC11C\\uBC84\\uB85C\\uBD80\\uD130 \\uBC1B\\uC740 \\uBA54\\uC2DC\\uC9C0:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: responseMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"VOxm3AcmI7W18QdpbtBxf+tS0VI=\", false, function () {\n  return [useNavigate];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Test","_s","responseMessage","setResponseMessage","navigate","fetchData","response","get","data","message","error","console","status","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/eGovFrame-4.2.0/msaStudy/SecondProject/frontend/src/component/Test.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Test() {\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // 컴포넌트가 렌더링될 때 데이터를 가져옵니다.\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // axios를 사용하여 GET 요청 보내기\r\n        const response = await axios.get('http://localhost:1001/userService/servicePage');\r\n        // 서버 응답 메시지를 상태로 저장\r\n        setResponseMessage(response.data.message);\r\n      } catch (error) {\r\n        console.error('데이터 가져오기 실패: ', error);\r\n        // 세션 만료 시 401 상태 코드를 확인하고 로그인 페이지로 리다이렉트\r\n        if (error.response && error.response.status === 401) {\r\n          // 세션이 만료된 경우 로그인 페이지로 이동\r\n          navigate('./');\r\n        } else {\r\n          setResponseMessage('데이터를 불러오는 데 실패했습니다.');\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [navigate]); // useNavigate 의존성 추가\r\n\r\n  return (\r\n    <div>\r\n      <h2>서버로부터 받은 메시지:</h2>\r\n      <p>{responseMessage}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMU,QAAQ,GAAGP,WAAW,CAAC,CAAC;;EAE9B;EACAF,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,+CAA+C,CAAC;QACjF;QACAJ,kBAAkB,CAACG,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;MAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;QACrC;QACA,IAAIA,KAAK,CAACJ,QAAQ,IAAII,KAAK,CAACJ,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;UACnD;UACAR,QAAQ,CAAC,IAAI,CAAC;QAChB,CAAC,MAAM;UACLD,kBAAkB,CAAC,qBAAqB,CAAC;QAC3C;MACF;IACF,CAAC;IAEDE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,oBACEL,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBlB,OAAA;MAAAc,QAAA,EAAIX;IAAe;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV;AAAChB,EAAA,CAjCQD,IAAI;EAAA,QAEMH,WAAW;AAAA;AAAAqB,EAAA,GAFrBlB,IAAI;AAmCb,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}