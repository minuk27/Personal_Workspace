{"ast":null,"code":"var _jsxFileName = \"C:\\\\eGovFrame-4.2.0\\\\msaStudy\\\\SecondProject\\\\frontend\\\\src\\\\component\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [userID, setUserID] = useState('');\n  const [password, setPassword] = useState('');\n  //const [setResponseMessage] = useState('');\n  const navigate = useNavigate();\n  const postData = async () => {\n    try {\n      const response = await axios.post('http://localhost:1001/userService/Login', {\n        userID: userID,\n        password: password\n      }, {\n        withCredentials: true // 쿠키 자동 포함\n      });\n      if (response.data.success) {\n        navigate('./test');\n      } else {\n        console.error('요청 실패');\n        //setResponseMessage('요청에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('데이터 전송 실패: ', error);\n      //setResponseMessage('데이터 전송에 실패했습니다.');\n    }\n  };\n  const joinPage = async () => {\n    navigate('./Signup');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD68C\\uC6D0 \\uC815\\uBCF4 \\uC785\\uB825\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userID,\n        onChange: e => setUserID(e.target.value) // 입력된 값을 상태로 저장\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"PW:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value) // 입력된 값을 상태로 저장\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: postData,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: joinPage,\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"XZPPkMabB8/8/y8TBc50Ock0cKg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","userID","setUserID","password","setPassword","navigate","postData","response","post","withCredentials","data","success","console","error","joinPage","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/eGovFrame-4.2.0/msaStudy/SecondProject/frontend/src/component/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n  const [userID, setUserID] = useState('');  \r\n  const [password, setPassword] = useState('');    \r\n  //const [setResponseMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const postData = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:1001/userService/Login', {\r\n        userID: userID,\r\n        password: password\r\n      },{\r\n        withCredentials: true // 쿠키 자동 포함\r\n      });\r\n\r\n      if (response.data.success) {\r\n        navigate('./test');\r\n      } else {\r\n        console.error('요청 실패');\r\n        //setResponseMessage('요청에 실패했습니다.');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('데이터 전송 실패: ', error);\r\n      //setResponseMessage('데이터 전송에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  const joinPage = async () => {\r\n    navigate('./Signup');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>회원 정보 입력</h2>\r\n\r\n      <label>\r\n        ID:\r\n        <input\r\n          type=\"text\"\r\n          value={userID}\r\n          onChange={(e) => setUserID(e.target.value)} // 입력된 값을 상태로 저장\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        PW:\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)} // 입력된 값을 상태로 저장\r\n        />\r\n      </label>\r\n      <br />\r\n      {/* 서버로 데이터를 전송하는 버튼 */}\r\n      <button onClick={postData}>Login</button>\r\n      <button onClick={joinPage}>Signup</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}