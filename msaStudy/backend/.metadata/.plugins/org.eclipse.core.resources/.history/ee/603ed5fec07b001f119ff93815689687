package egovframework.msa.minuk.config;

import org.springframework.beans.factory.annotation.Value;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import io.jsonwebtoken.ExpiredJwtException;
import io.jsonwebtoken.SignatureException;
import io.jsonwebtoken.MalformedJwtException;

public class JwtUtil {
	
	@Value("${jwt.secret}")
	private String secretKey;// 비밀키

    // JWT 토큰 검증 메서드
    public boolean isValidToken(String token) {
        try {
            // JWT에서 Claims 추출
            Claims claims = Jwts.parser()
                    .setSigningKey(secretKey)
                    .parseClaimsJws(token)
                    .getBody();

            // 토큰의 만료 시간 확인
            return !claims.getExpiration().before(new Date());
        } catch (ExpiredJwtException e) {
            // 토큰이 만료된 경우
            System.out.println("Token is expired");
        } catch (SignatureException e) {
            // 서명이 유효하지 않은 경우
            System.out.println("Invalid token signature");
        } catch (MalformedJwtException e) {
            // 잘못된 형식의 JWT인 경우
            System.out.println("Malformed token");
        } catch (Exception e) {
            // 기타 예외 처리
            System.out.println("Token validation failed");
        }
        return false; // 검증 실패
    }
}
