package egovframework.msa.minuk.config;

import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.RequestBody;

import egovframework.msa.minuk.userDto.LoginRequest;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

@Component
public class JwtTokenProvider {
	
	@Value("${jwt.secret}")
	private String SECRET_KEY;
    private final long EXPIRATION_TIME = 1000 * 30; // 30초?
    
    // JWT 토큰 생성
    public String tokenOffer(@RequestBody LoginRequest loginRequest) {
        Map<String, Object> claims = new HashMap<>();
        claims.put("userID", loginRequest.getUserID());
        claims.put("password", loginRequest.getPassword());

        return Jwts.builder()
                .setClaims(claims)
                .setIssuedAt(new Date(System.currentTimeMillis()))
                .setExpiration(new Date(System.currentTimeMillis() + EXPIRATION_TIME))
                .signWith(SignatureAlgorithm.HS256, SECRET_KEY)
                .compact();
    }
}
