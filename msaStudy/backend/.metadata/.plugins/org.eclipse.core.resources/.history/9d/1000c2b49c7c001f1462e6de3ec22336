package egovframework.msa.minuk.config;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import io.jsonwebtoken.io.Decoders;
import io.jsonwebtoken.io.Encoders;
import io.jsonwebtoken.security.Keys;

import java.nio.charset.StandardCharsets;
import java.security.Key;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.RequestBody;

import egovframework.msa.minuk.userDto.LoginRequest;
import egovframework.msa.minuk.userDto.TokenResponse;

@Component
public class JwtTokenProvider {
	
	private static final String SECRET_KEY = "your_secret_key"; // 비밀 키
    private static final long EXPIRATION_TIME = 86400000; // 1일 (밀리초)
    
    // JWT 토큰 생성
    public String createJWT(@RequestBody LoginRequest loginRequest) {
        Map<String, Object> header = new HashMap<>();

        header.put("typ", "JWT");

        Date ext = new Date();
        ext.setTime(ext.getTime() + EXPIRATION_TIME);

        Map<String, Object> payload = new HashMap<>();
        String jwt = Jwts.builder()
        			.setHeader("JWT")
        			.setClaims(payload)
        			.setSubject("test")
        			.setExpiration(ext)
        			.signWith(SignatureAlgorithm.HS256,SECRET_KEY.getBytes())
        			.compact();
        return jwt;
    	
    }
    
    public String encodeBase64SecretKey(String secretKey) {
        return Encoders.BASE64.encode(secretKey.getBytes(StandardCharsets.UTF_8));
    }
}
