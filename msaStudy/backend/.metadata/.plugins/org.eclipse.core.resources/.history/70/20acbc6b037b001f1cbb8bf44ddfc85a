package egovframework.msa.minuk.controller;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import egovframework.msa.minuk.common.LoginStatus;
import egovframework.msa.minuk.common.TokenStatus;
import egovframework.msa.minuk.service.UserService;
import egovframework.msa.minuk.userDto.*;
import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/userService")
@RequiredArgsConstructor
public class UserController {
	
	private final UserService userService;
	
	//테스트 페이지
	@GetMapping("/testPage")
	public String pageTest() {
		return "test";
	}
	
	//로그인
	@PostMapping("/Login")
	public ResponseEntity<?> userLogin(@RequestBody LoginRequest loginRequest) {
		LoginStatus loginStatus = userService.loginCheck(loginRequest);
		String returnStr = "";
		HttpStatus httpStatus = null;
		
		if(loginStatus == LoginStatus.SUCCESS) {
			returnStr = userService.loginToken(loginRequest);
			httpStatus = HttpStatus.OK;
		}
		else {
			httpStatus = HttpStatus.BAD_REQUEST;
			if(loginStatus == LoginStatus.NO_USER) {
				returnStr = "No User";
			}
			else {
				returnStr = "Wrong password";
			}
		}
		
		return ResponseEntity.status(httpStatus).body(returnStr);
	}
	
	//회원가입
	@PostMapping("/Join")
	public ResponseEntity<Map<String, Object>> userJoin(@RequestBody JoinRequest joinRequest){
		Map<String, Object> response = new HashMap<>();
		
		if(userService.joinCheck(joinRequest)) {
			response.put("success", true);
            response.put("message", "회원가입 성공");
            return ResponseEntity.ok(response);
		}
		else {
			response.put("success", false);
            response.put("message", "회원가입 실패");
            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(response);
		}
	}
	
}