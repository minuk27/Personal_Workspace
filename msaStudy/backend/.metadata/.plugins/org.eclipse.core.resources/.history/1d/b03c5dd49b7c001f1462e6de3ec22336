package egovframework.msa.minuk.config;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import io.jsonwebtoken.io.Decoders;
import io.jsonwebtoken.io.Encoders;
import io.jsonwebtoken.security.Keys;

import java.nio.charset.StandardCharsets;
import java.security.Key;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.RequestBody;

import egovframework.msa.minuk.userDto.LoginRequest;
import egovframework.msa.minuk.userDto.TokenResponse;

@Component
public class JwtTokenProvider {
	
	private static final String SECRET_KEY = "your_secret_key"; // 비밀 키
    private static final long EXPIRATION_TIME = 86400000; // 1일 (밀리초)
    
    // JWT 토큰 생성
    public String createJWT(@RequestBody LoginRequest loginRequest) {
    	Map<String, Object> claims = new HashMap<>();
        claims.put("username", loginRequest.getUserID()); // 사용자 이름을 클레임에 추가

        return Jwts.builder()
                .setClaims(claims) // 클레임 설정
                .setIssuedAt(new Date(System.currentTimeMillis())) // 발행 시간
                .setExpiration(new Date(System.currentTimeMillis() + 1000 * 60 * 60 * 10)) // 만료 시간 (10시간)
                .signWith(SignatureAlgorithm.HS256, SECRET_KEY) // 서명 알고리즘 및 비밀 키
                .compact(); // 최종 토큰 생성
    	
    }
    
    public String encodeBase64SecretKey(String secretKey) {
        return Encoders.BASE64.encode(secretKey.getBytes(StandardCharsets.UTF_8));
    }
}
