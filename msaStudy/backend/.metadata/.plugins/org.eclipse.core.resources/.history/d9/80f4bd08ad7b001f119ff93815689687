package egovframework.msa.minuk.filter;

import org.springframework.cloud.gateway.filter.GatewayFilter;
import org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory;
import org.springframework.http.*;
import org.springframework.stereotype.Component;

import egovframework.msa.minuk.config.JwtUtil;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Component
public class JwtAuthenticationFilter extends AbstractGatewayFilterFactory<JwtAuthenticationFilter.Config> {

    private final JwtUtil jwtUtil;

    public JwtAuthenticationFilter(JwtUtil jwtUtil) {
        super(Config.class);
        this.jwtUtil = jwtUtil;
    }

    @Override
    public GatewayFilter apply(Config config) {
        return (exchange, chain) -> {
            // Authorization 헤더에서 토큰을 가져옴
            String token = exchange.getRequest().getHeaders().getFirst("Authorization");

            // 토큰 검증 로직
            if (token == null || !jwtUtil.validateToken(token.substring(7))) {
                exchange.getResponse().setStatusCode(HttpStatus.UNAUTHORIZED);
                return exchange.getResponse().setComplete();
            }

            // 검증이 완료되면 다음 필터로 진행
            return chain.filter(exchange);
        };
    }

    @Override
    public String name() {
        return "JwtAuthenticationFilter";
    }

    public static class Config {
        // 필요한 설정을 여기에 추가할 수 있습니다.
    }
}
